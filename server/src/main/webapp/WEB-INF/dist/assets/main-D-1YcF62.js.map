{"version":3,"file":"main-D-1YcF62.js","sources":["../../../../../../../src-fronted/src/spa-navigator.ts","../../../../../../../src-fronted/src/typescript.svg","../../../../../../../../../../../vite.svg","../../../../../../../src-fronted/src/main.ts"],"sourcesContent":["/**\n * SPA 네비게이션 라이브러리\n * 페이지 이동과 팝업을 히스토리 API와 통합하여 관리\n */\nexport class SpaNavigator {\n    private routes: Map<string, RouteHandler> = new Map();\n    private popupHandlers: Map<string, PopupHandler> = new Map();\n    private popupStack: PopupState[] = [];\n    private defaultRoute: RouteHandler | null = null;\n    private notFoundHandler: RouteHandler | null = null;\n    \n    constructor(options: SpaNavigatorOptions = {}) {\n      // 브라우저 이벤트 리스너 등록\n      window.addEventListener('popstate', this.handlePopState.bind(this));\n      window.addEventListener('load', this.handleInitialRoute.bind(this));\n      \n      // 옵션 적용\n      if (options.defaultRoute) this.defaultRoute = options.defaultRoute;\n      if (options.notFoundHandler) this.notFoundHandler = options.notFoundHandler;\n      \n      // 앱 초기화\n      if (document.readyState === 'complete') {\n        this.handleInitialRoute();\n      }\n    }\n    \n    /**\n     * 경로에 대한 핸들러 등록\n     */\n    route(path: string, handler: RouteHandler): SpaNavigator {\n      this.routes.set(path, handler);\n      return this;\n    }\n    \n    /**\n     * 기본 경로 핸들러 등록\n     */\n    setDefaultRoute(handler: RouteHandler): SpaNavigator {\n      this.defaultRoute = handler;\n      return this;\n    }\n    \n    /**\n     * 404 페이지 핸들러 등록\n     */\n    setNotFoundHandler(handler: RouteHandler): SpaNavigator {\n      this.notFoundHandler = handler;\n      return this;\n    }\n    \n    /**\n     * 팝업 핸들러 등록\n     */\n    registerPopup(popupId: string, handler: PopupHandler): SpaNavigator {\n      this.popupHandlers.set(popupId, handler);\n      return this;\n    }\n    \n    /**\n     * 페이지 이동\n     */\n    navigate(path: string, data: any = {}): void {\n      // 모든 팝업 닫기\n      this.closeAllPopups(false);\n      \n      // 새 페이지로 이동\n      history.pushState({ \n        type: 'page', \n        path,\n        data \n      }, '', path);\n      \n      this.renderCurrentPath();\n    }\n    \n    /**\n     * 팝업 열기\n     */\n    openPopup(popupId: string, data: any = {}): void {\n      if (!this.popupHandlers.has(popupId)) {\n        console.error(`Popup handler not found for: ${popupId}`);\n        return;\n      }\n      \n      const currentPath = window.location.pathname;\n      const url = new URL(window.location.href);\n      \n      // 현재 팝업 스택에 추가\n      const popupState: PopupState = { \n        id: popupId, \n        data,\n        openedAt: new Date().toISOString()\n      };\n      this.popupStack.push(popupState);\n      \n      // 팝업 상태를 URL 쿼리에 추가\n      url.searchParams.set('popup', popupId);\n      if (Object.keys(data).length > 0) {\n        url.searchParams.set('data', btoa(JSON.stringify(data)));\n      }\n      \n      // 히스토리에 팝업 상태 추가\n      history.pushState({\n        type: 'popup', \n        popup: popupState, \n        stack: [...this.popupStack],\n        path: currentPath\n      }, '', url.toString());\n      \n      // 팝업 렌더링\n      this.renderPopup(popupState);\n    }\n    \n    /**\n     * 팝업 닫기\n     */\n    closePopup(navigate: boolean = true): void {\n      if (this.popupStack.length === 0) return;\n      \n      const popup = this.popupStack.pop()!;\n      \n      if (navigate) {\n        // 히스토리 뒤로가기로 팝업 닫기\n        history.back();\n      } else {\n        // 히스토리 변경 없이 UI만 업데이트\n        this.updatePopupUI();\n        \n        // 팝업 닫힘 이벤트 발생\n        const handler = this.popupHandlers.get(popup.id);\n        if (handler && handler.onClose) {\n          handler.onClose(popup.data);\n        }\n      }\n    }\n    \n    /**\n     * 모든 팝업 닫기\n     */\n    closeAllPopups(navigate: boolean = true): void {\n      if (this.popupStack.length === 0) return;\n      \n      if (navigate) {\n        // 팝업 스택 깊이만큼 뒤로가기\n        const depth = this.popupStack.length;\n        history.go(-depth);\n      } else {\n        // 스택에서 모든 팝업 제거\n        while (this.popupStack.length > 0) {\n          const popup = this.popupStack.pop()!;\n          const handler = this.popupHandlers.get(popup.id);\n          if (handler && handler.onClose) {\n            handler.onClose(popup.data);\n          }\n        }\n        \n        // UI 업데이트\n        this.updatePopupUI();\n      }\n    }\n    \n    /**\n     * 페이지 새로고침\n     */\n    refresh(): void {\n      const state = history.state || {};\n      \n      if (state.type === 'popup') {\n        // 팝업 상태 새로고침\n        this.updatePopupUI();\n      } else {\n        // 현재 페이지 다시 렌더링\n        this.renderCurrentPath();\n      }\n    }\n    \n    /**\n     * 뒤로가기 이벤트 처리\n     */\n    private handlePopState(event: PopStateEvent): void {\n      const state = event.state || {};\n      \n      // 팝업 스택 복원\n      if (state.stack) {\n        this.popupStack = state.stack;\n      } else {\n        this.popupStack = [];\n      }\n      \n      if (state.type === 'popup') {\n        // 팝업 상태로 UI 업데이트\n        this.updatePopupUI();\n      } else {\n        // 일반 페이지 렌더링\n        this.renderCurrentPath();\n      }\n    }\n    \n    /**\n     * 초기 경로 처리\n     */\n    private handleInitialRoute(): void {\n      const url = new URL(window.location.href);\n      const popupId = url.searchParams.get('popup');\n      \n      // URL에 팝업 정보가 있는 경우 복원\n      if (popupId && this.popupHandlers.has(popupId)) {\n        let data = {};\n        const encodedData = url.searchParams.get('data');\n        \n        if (encodedData) {\n          try {\n            data = JSON.parse(atob(encodedData));\n          } catch (e) {\n            console.error('Failed to parse popup data', e);\n          }\n        }\n        \n        // 팝업 상태 복원\n        const popupState: PopupState = { id: popupId, data, openedAt: new Date().toISOString() };\n        this.popupStack = [popupState];\n        \n        // 히스토리 상태 업데이트\n        history.replaceState({\n          type: 'popup',\n          popup: popupState,\n          stack: this.popupStack,\n          path: window.location.pathname\n        }, '', window.location.href);\n        \n        // 먼저 기본 페이지 렌더링 후 팝업 표시\n        this.renderCurrentPath();\n        this.renderPopup(popupState);\n      } else {\n        // 일반 페이지 렌더링\n        this.renderCurrentPath();\n      }\n    }\n    \n    /**\n     * 현재 경로에 맞는 페이지 렌더링\n     */\n    private renderCurrentPath(): void {\n      const path = window.location.pathname;\n      const handler = this.routes.get(path);\n      \n      // 모든 팝업 요소 숨기기\n      document.querySelectorAll('.spa-popup').forEach(popup => {\n        (popup as HTMLElement).style.display = 'none';\n      });\n      \n      if (handler) {\n        // 경로 핸들러 실행\n        handler(path, history.state?.data || {});\n      } else if (this.notFoundHandler) {\n        // 404 핸들러 실행\n        this.notFoundHandler(path, {});\n      } else if (this.defaultRoute) {\n        // 기본 핸들러 실행\n        this.defaultRoute(path, {});\n      } else {\n        console.error(`No handler found for path: ${path}`);\n      }\n    }\n    \n    /**\n     * 팝업 렌더링\n     */\n    private renderPopup(popupState: PopupState): void {\n      const handler = this.popupHandlers.get(popupState.id);\n      if (!handler) return;\n      \n      if (handler.onOpen) {\n        handler.onOpen(popupState.data);\n      }\n      \n      this.updatePopupUI();\n    }\n    \n    /**\n     * 팝업 UI 업데이트\n     */\n    private updatePopupUI(): void {\n      // 모든 팝업 숨기기\n      document.querySelectorAll('.spa-popup').forEach(popup => {\n        (popup as HTMLElement).style.display = 'none';\n      });\n      \n      // 현재 스택의 팝업들 표시\n      this.popupStack.forEach((popup, index) => {\n        const handler = this.popupHandlers.get(popup.id);\n        if (!handler || !handler.element) return;\n        \n        const element = handler.element;\n        element.style.display = 'block';\n        \n        // z-index 설정 (스택 순서대로)\n        element.style.zIndex = `${1000 + index}`;\n        \n        // 팝업 데이터 업데이트\n        if (handler.onUpdate) {\n          handler.onUpdate(popup.data);\n        }\n      });\n    }\n  }\n  \n  // 타입 정의\n  export type RouteHandler = (path: string, data: any) => void;\n  \n  export interface PopupHandler {\n    element: HTMLElement;\n    onOpen?: (data: any) => void;\n    onUpdate?: (data: any) => void;\n    onClose?: (data: any) => void;\n  }\n  \n  export interface PopupState {\n    id: string;\n    data: any;\n    openedAt: string;\n  }\n  \n  export interface SpaNavigatorOptions {\n    defaultRoute?: RouteHandler;\n    notFoundHandler?: RouteHandler;\n  }","export default \"__VITE_ASSET__CuHqba4B__\"","export default \"__VITE_PUBLIC_ASSET__d6945b69__\"","import './style.css'\nimport { SpaNavigator, PopupHandler } from './spa-navigator'\nimport typescriptLogo from './typescript.svg'\nimport viteLogo from '/vite.svg'\n\n// Initialize SPA Navigator\nconst navigator = new SpaNavigator();\n\n// Create a Map with some data (for product pages)\nconst fruitPrices = new Map<string, number>();\nfruitPrices.set('Apple', 1.99);\nfruitPrices.set('Banana', 0.99);\nfruitPrices.set('Orange', 2.49);\nfruitPrices.set('Mango', 3.99);\n\nconst veggiePricesObj = {\n  Carrot: 1.49,\n  Broccoli: 2.99,\n  Spinach: 3.49\n};\nconst veggiePrices = new Map<string, number>(Object.entries(veggiePricesObj));\n\n// All products\nconst allProducts = new Map<string, number>([...fruitPrices, ...veggiePrices]);\n\n// Create app container\ndocument.body.innerHTML = `\n  <div id=\"app-container\">\n    <div id=\"page-container\"></div>\n    \n    <!-- Popups -->\n    <div id=\"product-details-popup\" class=\"spa-popup\">\n      <div class=\"popup-content\">\n        <div class=\"popup-header\">\n          <h2 id=\"popup-product-name\">Product Details</h2>\n          <button class=\"close-button\">×</button>\n        </div>\n        <div class=\"popup-body\">\n          <p id=\"popup-product-price\"></p>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla facilisi.</p>\n        </div>\n      </div>\n    </div>\n    \n    <div id=\"settings-popup\" class=\"spa-popup\">\n      <div class=\"popup-content\">\n        <div class=\"popup-header\">\n          <h2>Settings</h2>\n          <button class=\"close-button\">×</button>\n        </div>\n        <div class=\"popup-body\">\n          <h3>Theme</h3>\n          <select>\n            <option>Light</option>\n            <option>Dark</option>\n            <option>System</option>\n          </select>\n          <h3>Language</h3>\n          <select>\n            <option>English</option>\n            <option>Korean</option>\n            <option>Spanish</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Bottom Navigation -->\n    <nav id=\"bottom-nav\">\n      <button class=\"nav-btn\" data-path=\"/\">Home</button>\n      <button class=\"nav-btn\" data-path=\"/products\">Products</button>\n      <button class=\"nav-btn\" data-path=\"/about\">About</button>\n      <button id=\"settings-btn\">Settings</button>\n    </nav>\n  </div>\n`;\n\n// Add mobile-friendly styles\nconst styleSheet = document.createElement(\"style\");\nstyleSheet.textContent = `\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  }\n  \n  #app-container {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    max-width: 100%;\n    overflow-x: hidden;\n  }\n  \n  #page-container {\n    flex: 1;\n    overflow-y: auto;\n    padding: 20px;\n    padding-bottom: 80px; /* Space for bottom nav */\n  }\n  \n  .page-header {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n  }\n  \n  .page-header img {\n    height: 30px;\n    margin-right: 10px;\n  }\n  \n  .product-item {\n    padding: 15px;\n    margin-bottom: 10px;\n    border-radius: 8px;\n    background-color: #f8f9fa;\n    border-left: 4px solid #0095ff;\n    display: flex;\n    justify-content: space-between;\n  }\n  \n  /* Bottom navigation */\n  #bottom-nav {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    background-color: #fff;\n    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n    z-index: 100;\n  }\n  \n  .nav-btn {\n    flex: 1;\n    padding: 15px 5px;\n    border: none;\n    background: none;\n    font-size: 14px;\n    color: #666;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  \n  .nav-btn.active {\n    color: #0095ff;\n    font-weight: bold;\n  }\n  \n  /* Popup styles */\n  .spa-popup {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.5);\n    display: none;\n    justify-content: center;\n    align-items: flex-end;\n    z-index: 1000;\n  }\n  \n  .popup-content {\n    background: white;\n    width: 100%;\n    max-height: 80%;\n    border-radius: 12px 12px 0 0;\n    overflow: hidden;\n    animation: slide-up 0.3s ease-out;\n  }\n  \n  .popup-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px;\n    border-bottom: 1px solid #eee;\n  }\n  \n  .popup-body {\n    padding: 20px;\n    overflow-y: auto;\n  }\n  \n  .close-button {\n    border: none;\n    background: none;\n    font-size: 24px;\n    cursor: pointer;\n  }\n  \n  @keyframes slide-up {\n    from { transform: translateY(100%); }\n    to { transform: translateY(0); }\n  }\n`;\ndocument.head.appendChild(styleSheet);\n\n// Route handlers\nnavigator.route('/', (_path, _data) => {\n  document.querySelector('#page-container')!.innerHTML = `\n    <div class=\"page-header\">\n      <img src=\"${viteLogo}\" alt=\"Vite logo\" />\n      <h1>Home</h1>\n    </div>\n    <p>Welcome to our mobile app example using SpaNavigator!</p>\n    \n    <h2>Featured Products</h2>\n    <div class=\"product-item\" data-product=\"Apple\">\n      <span>Apple</span>\n      <span>$1.99</span>\n    </div>\n    <div class=\"product-item\" data-product=\"Carrot\">\n      <span>Carrot</span>\n      <span>$1.49</span>\n    </div>\n    \n    <h2>Today's Special</h2>\n    <div class=\"product-item special\" data-product=\"Banana\">\n      <span>Banana</span>\n      <span>$0.99 <small>20% OFF!</small></span>\n    </div>\n    \n    <!-- New Button Added -->\n    <div style=\"margin-top: 30px; text-align: center;\">\n      <button id=\"show-random-product\" style=\"background-color: #0095ff; color: white;\">\n        Show Random Product Price\n      </button>\n    </div>\n  `;\n  \n  // Add event listener for the new button\n  document.querySelector('#show-random-product')?.addEventListener('click', () => {\n    // Get all product names from the Map\n    const products = Array.from(allProducts.keys());\n    \n    // Select a random product\n    const randomIndex = Math.floor(Math.random() * products.length);\n    const randomProduct = products[randomIndex];\n    \n    // Get its price from the Map\n    const price = allProducts.get(randomProduct);\n    \n    // Display in alert\n    alert(`Random Product: ${randomProduct}\\nPrice: $${price}`);\n  });\n  \n  highlightCurrentNav('/');\n  setupProductItemListeners();\n});\n\nnavigator.route('/products', (path, data) => {\n  const productsHTML = Array.from(allProducts.entries())\n    .map(([product, price]) => `\n      <div class=\"product-item\" data-product=\"${product}\">\n        <span>${product}</span>\n        <span>$${price}</span>\n      </div>\n    `).join('');\n    \n  document.querySelector('#page-container')!.innerHTML = `\n    <div class=\"page-header\">\n      <img src=\"${typescriptLogo}\" alt=\"TypeScript logo\" />\n      <h1>Products</h1>\n    </div>\n    <p>Browse our catalog of fresh products:</p>\n    \n    <div id=\"products-list\">\n      ${productsHTML}\n    </div>\n  `;\n  \n  highlightCurrentNav('/products');\n  setupProductItemListeners();\n});\n\nnavigator.route('/about', (path, data) => {\n  document.querySelector('#page-container')!.innerHTML = `\n    <div class=\"page-header\">\n      <img src=\"${viteLogo}\" alt=\"Vite logo\" />\n      <h1>About</h1>\n    </div>\n    <p>This is a simple SPA example using custom router with history API integration.</p>\n    <p>Features demonstrated:</p>\n    <ul>\n      <li>Page navigation with history support</li>\n      <li>Mobile-friendly popup system</li>\n      <li>Map and Set usage for data management</li>\n    </ul>\n    <p>Built with Vite and TypeScript, optimized for iOS 12+</p>\n  `;\n  \n  highlightCurrentNav('/about');\n});\n\n// 404 handler\nnavigator.setNotFoundHandler((path, data) => {\n  document.querySelector('#page-container')!.innerHTML = `\n    <h1>Page Not Found</h1>\n    <p>The path \"${path}\" doesn't exist.</p>\n    <button id=\"back-home\">Back to Home</button>\n  `;\n  \n  document.querySelector('#back-home')?.addEventListener('click', () => {\n    navigator.navigate('/');\n  });\n});\n\n// Register popups\nconst productDetailsPopup: PopupHandler = {\n  element: document.querySelector('#product-details-popup') as HTMLElement,\n  onOpen: (data) => {\n    document.querySelector('#popup-product-name')!.textContent = data.name;\n    document.querySelector('#popup-product-price')!.textContent = `Price: $${data.price}`;\n  },\n  onClose: () => {\n    console.log('Product details popup closed');\n  }\n};\n\nconst settingsPopup: PopupHandler = {\n  element: document.querySelector('#settings-popup') as HTMLElement,\n  onOpen: (data) => {\n    console.log('Settings opened');\n  }\n};\n\nnavigator.registerPopup('product-details', productDetailsPopup);\nnavigator.registerPopup('settings', settingsPopup);\n\n// Setup event listeners\nfunction setupNavigation() {\n  document.querySelectorAll('.nav-btn').forEach(btn => {\n    btn.addEventListener('click', (e) => {\n      const path = (e.currentTarget as HTMLElement).dataset.path;\n      if (path) navigator.navigate(path);\n    });\n  });\n  \n  document.querySelector('#settings-btn')?.addEventListener('click', () => {\n    navigator.openPopup('settings', {});\n  });\n  \n  document.querySelectorAll('.close-button').forEach(btn => {\n    btn.addEventListener('click', () => {\n      navigator.closePopup();\n    });\n  });\n}\n\nfunction highlightCurrentNav(path: string) {\n  document.querySelectorAll('.nav-btn').forEach(btn => {\n    if ((btn as HTMLElement).dataset.path === path) {\n      btn.classList.add('active');\n    } else {\n      btn.classList.remove('active');\n    }\n  });\n}\n\nfunction setupProductItemListeners() {\n  document.querySelectorAll('.product-item').forEach(item => {\n    item.addEventListener('click', (e) => {\n      const productName = (e.currentTarget as HTMLElement).dataset.product;\n      if (productName) {\n        const price = allProducts.get(productName) || 0;\n        navigator.openPopup('product-details', { name: productName, price });\n      }\n    });\n  });\n}\n\n// Initialize the app\nsetupNavigation();\nnavigator.navigate('/');"],"names":[],"mappings":"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"}