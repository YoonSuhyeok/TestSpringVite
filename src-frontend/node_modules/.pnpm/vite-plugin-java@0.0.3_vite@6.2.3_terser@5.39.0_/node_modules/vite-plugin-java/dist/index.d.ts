import { Plugin, UserConfig, ConfigEnv } from 'vite';
import { globSync, GlobOptions } from 'glob';

interface JavaPlugin extends Plugin {
    config: (config: UserConfig, env: ConfigEnv) => UserConfig;
}
/**
 * Java plugin for Vite.
 *
 * @param config - A config object or relative path(s) of the scripts to be compiled.
 */
declare function java(config: string | string[] | VitePluginJavaConfig): [JavaPlugin, ...Plugin[]];

declare const PLUGIN_NAME = "vite-plugin-java";
/**
 * Creates the Rollup input configuration object.
 *
 * @param pattern - The glob pattern to match the entry files.
 * @param baseDir - The base directory for the entry files.
 * @param options - Additional options for the glob pattern matching.
 * @returns The Rollup input configuration object.
 */
declare function createRollupInputConfig(pattern?: string | string[], baseDir?: string, options?: Parameters<typeof globSync>[1]): {
    [entryAlias: string]: string;
};
/**
 * Reads the properties from the project files.
 *
 * @returns A map containing the key-value pairs of the properties.
 */
declare function readPropertiesFile(pattern?: string | string[], options?: GlobOptions): Map<string, string>;

interface VitePluginJavaConfig {
    /**
     * The path or paths of the entry points to compile.
     */
    input: string | string[] | {
        [entryAlias: string]: string;
    };
    /**
     * The directory for public assets.
     *
     * @default 'public'
     */
    publicDirectory?: string;
    /**
     * The public subdirectory where compiled assets should be written.
     *
     * @default 'build'
     */
    buildDirectory?: string;
    /**
     * The directory where the bundle should be written.
     *
     * @default 'dist'
     */
    outputDirectory?: string;
    /**
     * The path to the Java project root.
     */
    javaProjectBase?: string;
    /**
     * Transform the code while serving.
     */
    transformOnServe?: (code: string, url: DevServerUrl) => string;
}
type DevServerUrl = `${'http' | 'https'}://${string}:${number}`;

export { type DevServerUrl, PLUGIN_NAME, type VitePluginJavaConfig, createRollupInputConfig, java as default, java, readPropertiesFile };
